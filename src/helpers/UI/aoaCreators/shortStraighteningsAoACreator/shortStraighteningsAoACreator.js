/* функция принимает массив объектов
  возвращает массив массивов для формирования книги коротких рихтовок в таблице единых форм
*/

export function shortStraighteningsAoACreator(data) {
  // возвращаемый объект, тут будет 1 массив и 1 объект:
  // 1 массив - массов массвов для формирования книги excel с помощью библиотеки XLSX;
  // 2 объект - объект для отрисовки таблицы на странице в браузере, состоит из 2 свойств:
      // 1 свойство - массив из элемнтов для создания header`а тбалица,
      // 2 свойство массив массивов с данными для создания тела таблицы.
  let returnedObj = {};

  // массов массвов для формирования книги excel с помощью библиотеки XLSX;
  let forXLSXAoA = [];

  // объект для отрисовки таблицы на странице в браузере, состоит из 2 свойств:
  let forBrowserPageRenderObj = {
    header: [],         // 1 свойство - массив из элемнтов для создания header`а тбалица,
    body: []            // 2 свойство массив массивов с данными для создания тела таблицы.
  };

  // Шапка таблицы
  forXLSXAoA.push([
    "№", "Дата проверки", "ПС", "ПЕРЕГОН, СТАНЦИЯ", "ПЧ",
    "ПУТЬ, съезд", "КМ", "ПК/м", "Степень рихтовки (шт)", "Велич отступ мм/м",
    "Изменение величины рихтовки", "Устан. Скорость", "Ограничения СКОРОСТЬ пасс/груз/прж",
    "Радиус кривой (прямая)", "Температура воздуха ", "Температура рельса",
    "Количество фиксаций неисправности между проходами", "Бесстыковой, Звеньевой",
    "Срок устранения", "Кто выезжал на место рихтовки с осмотром (должность, ФИО)",
    "Причина появления неисправности, выводы. Плановая дата устранения",
    "Дата устранения (ф.№, вид работы, дата, время, должность, ФИО)"
  ]);
  forBrowserPageRenderObj.header.push(
    "№", "Дата проверки", "ПС", "ПЕРЕГОН, СТАНЦИЯ", "ПЧ",
    "ПУТЬ, съезд", "КМ", "ПК/м", "Степень рихтовки (шт)", "Велич отступ мм/м",
    "Изменение величины рихтовки", "Устан. Скорость", "Ограничения СКОРОСТЬ пасс/груз/прж"
  );

  data.forEach((item, i) => {
    
    // этот массив используется для пуша в него всех данных по одной неисправности,
    // чтобы потом получить массив массивов всех неисправности для формирования книги excel с помощью библиотеки XLSX;
    const forXLSXArr = [];

    forXLSXArr.push(
      item.sequentialNumber, item.fullDate, item.vagonNumber, item.station,
      item.distanceNumber, item.trackNumber, item.kilometer,
      `${item.picket}/${item.meter}`, item.degree, item.amount,
      item.amountChange, item.advancedSpeed, item.restrictionSpeed,
      "", "", "", "", "", "", "", "", ""
    );   // массив одна неисправность

    // запушим массив с одной неисправностью в массив со всеми неисправностями для формирования книги excel с помощью библиотеки XLSX; Будем пошить каждую неисправность
    forXLSXAoA.push(forXLSXArr);




    // этот массив используется для пуша в него всех данных по одной неисправности,
    // чтобы потом получить массив массивов всех неисправности для отрисовки таблицы на странице в браузере
    const forPageBrowserArr = [];

    forPageBrowserArr.push(
      item.sequentialNumber, item.fullDate, item.vagonNumber, item.station,
      item.distanceNumber, item.trackNumber, item.kilometer,
      `${item.picket}/${item.meter}`, item.degree, item.amount,
      item.amountChange, item.advancedSpeed, item.restrictionSpeed
    );   // массив одна неисправность

    // запушим массив с одной неисправностью в массив со всеми неисправностями для отрисовки таблицы на странице в браузере
    forBrowserPageRenderObj.body.push(forPageBrowserArr);
  });

  returnedObj = {
    forXLSXAoA,
    forBrowserPageRenderObj
  };

  return returnedObj;
}